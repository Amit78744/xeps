<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
  <!ENTITY % ents SYSTEM 'xep.ent'>
%ents;
]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<xep>
<header>
  <title>Recipient Server Side Notifications Filtering</title>
  <abstract>This specification defines a modern efficient way to deliver PubSub notifications.</abstract>
  <legal>
    <copyright>This XMPP Extension Protocol is copyright (c) 1999 - 2014 by the XMPP Standards Foundation (XSF).</copyright>
    <permissions>Permission is hereby granted, free of charge, to any person obtaining a copy of this specification (the &quot;Specification&quot;), to make use of the Specification without restriction, including without limitation the rights to implement the Specification in a software program, deploy the Specification in a network service, and copy, modify, merge, publish, translate, distribute, sublicense, or sell copies of the Specification, and to permit persons to whom the Specification is furnished to do so, subject to the condition that the foregoing copyright notice and this permission notice shall be included in all copies or substantial portions of the Specification. Unless separate permission is granted, modified works that are redistributed shall not contain misleading information regarding the authors, title, number, or publisher of the Specification, and shall not claim endorsement of the modified works by the authors, any organization or project to which the authors belong, or the XMPP Standards Foundation.</permissions>
    <warranty>## NOTE WELL: This Specification is provided on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. In no event shall the XMPP Standards Foundation or the authors of this Specification be liable for any claim, damages, or other liability, whether in an action of contract, tort, or otherwise, arising from, out of, or in connection with the Specification or the implementation, deployment, or other use of the Specification. ##</warranty>
    <liability>In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall the XMPP Standards Foundation or any author of this Specification be liable for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising out of the use or inability to use the Specification (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if the XMPP Standards Foundation or such author has been advised of the possibility of such damages.</liability>
    <conformance>This XMPP Extension Protocol has been contributed in full conformance with the XSF's Intellectual Property Rights Policy (a copy of which may be found at &lt;<link url='http://xmpp.org/extensions/ipr-policy.shtml'>http://xmpp.org/extensions/ipr-policy.shtml</link>&gt; or obtained by writing to XSF, P.O. Box 1641, Denver, CO 80201 USA).</conformance>
  </legal>
  <number>xxxx</number>
  <status>ProtoXEP</status>
  <type>Standards Track</type>
  <sig>Standards</sig>
  <approver>Council</approver>
  <dependencies>
    <spec>XMPP Core</spec>
    <spec>XEP-0001</spec>
    <spec>XEP-0033</spec>
    <spec>XEP-0060</spec>
    <spec>XEP-0115</spec>
  </dependencies>
  <supersedes/>
  <supersededby/>
  <shortname>NOT_YET_ASSIGNED</shortname>
  <author>
    <firstname>Sergey</firstname>
    <surname>Dobrov</surname>
    <email>Binary@JRuDevels.org</email>
    <jid>Binary@JRuDevels.org</jid>
  </author>
  <revision>
    <version>0.0.2</version>
    <date>2014-07-20</date>
    <initials>sd</initials>
    <remark><p>Updated based on Council feedback.</p></remark>
  </revision>
  <revision>
    <version>0.0.1</version>
    <date>2014-05-20</date>
    <initials>sd</initials>
    <remark><p>First draft.</p></remark>
  </revision>
</header>
<section1 topic='Introduction' anchor='intro'>
  <p>&xep0060; in conjuction with &xep0115; defines a way for a client to get rid of unwanted pubsub notifications and hence save significant amount of traffic. The protocol is quite flexible and reliable and is able to work even with servers that don't support filtering. Unfortunately, this reliability has its costs and the protocol has the following disadvantages:</p>
  <ul>
    <li>it's impossible to be subscribed to a person's feed if the person is not subscribed to you because in this case his server doesn't know your presence information and your capabilities and hence it can't filter the messages appropriately, so you won't receive any notifications at all;</li>
    <li>servers need to know not only their users' capabilities but also the capabilities of all the users that it wants to communicate;</li>
    <li>we can't reduce amount of S2S traffic by sending one notification for each server, we need to send as much notifications as much users are subscribed on it;</li>
    <li>clients can't decide what kind of notifications they want to receive; node owner decides instead, but clients might not be interested in some of notifications or vice versa.</li>
  </ul>
  <p>The most actual example of the problems that are beget with these disadvantages is the &xep0277;: you won't be able to subscribe to a user's blog if he doesn't want to read your blog as well. This will be a big problem for popular bloggers that can't read all the feeds of their readers.</p>
</section1>
<section1 topic='Requirements' anchor='reqs'>
  <p>The new protocol is needed to solve the stated problems that will allow to move the notifications filtering process from the sender side to the recipient side, that will allow us to filter them in a more sufficient way. Also, we must care of:</p>
  <ul>
    <li>backwards-compatibility: users of servers that don't support this XEP should be able to receive the notifications through the old protocol;</li>
    <li>users should be able to control what kind of events they want to receive besides the nodes types.</li>
  </ul>
</section1>
<section1 topic='Use Cases' anchor='usecases'>
  <p>This document should cover the following use cases:</p>
  <ul>
    <li>switching to the new protocol if the recipient's server support it;</li>
    <li>sending a notification;</li>
    <li>receiving a notification by server and broadcasting it to its users;</li>
    <li>advertising client's filtering preferences.</li>
  </ul>
  <section2 topic="Switching protocols">
    <p>Since we require the implementations to be backwards compatible, we need a mechanism for a sender to know if the recipient's server supports the modern protocol or not.</p>
    <p>To know this, sender's server should check recipient's capabilities as described at &xep0115; in the "Stream Feature" section: if the server supports the "urn:xmpp:tmp:rsf" feature then the server SHOULD use the protocol that's described here, if the server lacks support of this feature or doesn't provide its capabilities at all then the sender MUST NOT use this protocol.</p>
  </section2>
  <section2 topic="Sending and receiving a notification">
    <p>When using this protocol to deliver notifications, the server MUST follow these rules:</p>
    <ul>
      <li>send all the notifications that can be generated by the pubsub node without any care of node settings to make it possible for users to choose which notifications they want to receive instead;</li>
      <li>sender's server MUST send the only notification to each recipients' server;</li>
      <li>sender's server MUST set "to" attribute of the notification stanza to bare recipient's server JID (e.g. "example.net");</li>
      <li>sender's server MUST keep "from" attribute as usual;</li>
      <li>sender's server MUST include the exact addresses the notification should be delivered to using &xep0033;'s "bcc" address type.</li>
    </ul>
    <example caption='Sending the notification'>
        <![CDATA[
<message from='user@example.net'
         to='example.com'>
  <addresses xmlns='http://jabber.org/protocol/address'>
      <address type='bcc' jid='temas@jabber.org'/>
      <address type='bcc' jid='jer@jabber.org'/>
  </addresses>
  <event xmlns='http://jabber.org/protocol/pubsub#event'>
    <items node='n48ad4fj78zn38st734'>
      <item id='i1s2d3f4g5h6bjeh936'>
        <geoloc xmlns='http://jabber.org/protocol/geoloc'>
          <description>Venice</description>
          <lat>45.44</lat>
          <lon>12.33</lon>
        </geoloc>
      </item>
    </items>
  </event>
</message>
        ]]>
    </example>
    <p>If a server receives such an event to its bare address it MUST process it as described in &xep0033; copying the message to the necessary recipients and removing the "bcc" addresses from the stanza.</p>
  </section2>
  <section2 topic="Advertising client's filtering preferences">
    <p>As described at &xep0060;'s "Filtered notifications" section, client should add payload's NodeID and "+notify" postfix to tell which types of content it can and want to process.</p>
    <p>This document extends this filtering feature to allow clients also select which event types it wants to receive.</p>
    <p>To advertise user's preferences it should add a feature in its capabilities that MUST consist of payload's NodeID with appended "+events-" postfix and then append a list of necessary payload types. Here are the rules of generating this list:</p>
    <ul>
      <li>list should contain payload types those can be one of the following: config, delete, retract, sub as described in &xep0060;;</li>
      <li>order the list ascending;</li>
      <li>concatenate the items through the "-" sign.</li>
    </ul>
    <p>For example, the following string will mean that user wants to receive new items, node configuration changes and new subscriptions geolocation events, it should add the following features in its capabilities:</p>
    <ul>
      <li>http://jabber.org/protocol/geoloc+notify</li>
      <li>http://jabber.org/protocol/geoloc+events-config-sub</li>
    </ul>
    <p>The recipient's server MUST drop the notifications that are not in the list. New items notifications are implied by the "+notify" filter. If user doesn't specify the "+events" filter then the server SHOULD treat it as absence of any filtering at all.</p>
  </section2>
</section1>
<section1 topic='Security Considerations' anchor='security'>
  <p>PENDING</p>
</section1>
<section1 topic='IANA Considerations' anchor='iana'>
  <p>This document requires no interaction with the Internet Assigned Numbers Authority (IANA).</p>
</section1>
<section1 topic='XMPP Registrar Considerations' anchor='registrar'>
  <p>REQUIRED.</p>
</section1>
<section1 topic='XML Schema' anchor='schema'>
  <p>This protocol doesn't define any XML stanzas.</p>
</section1>
</xep>

