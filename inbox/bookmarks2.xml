<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
        <!ENTITY namespace "urn:xmpp:bookmarks:0">
        <!ENTITY % ents SYSTEM 'xep.ent'>
        %ents;
        ]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<xep>
    <header>
        <title>Bookmarks 2 (This Time it's Serious)</title>
        <abstract>This specification defines a syntax and storage profile for keeping a list of chatroom bookmarks on the server.</abstract>
        &LEGALNOTICE;
        <number>XXXX</number>
        <status>ProtoXEP</status>
        <type>Standards Track</type>
        <sig>Standards</sig>
        <approver>Council</approver>
        <dependencies/>
        <supersedes/>
        <supersededby/>
        <shortname>bookmarks2</shortname>
        <registry/>
        <discuss>standards</discuss>
        <author>
            <firstname>Dave</firstname>
            <surname>Cridland</surname>
            <email>dave.cridland@surevine.com</email>
            <jid>dave.cridland@surevine.com</jid>
        </author>
        <author>
            <firstname>Jan-Carel</firstname>
            <surname>Brand</surname>
            <email>jc@opkode.com</email>
            <jid>jc@opkode.com</jid>
        </author>
        <revision>
            <version>0.0.1</version>
            <date>2018-03-17</date>
            <initials>dwd/jcb</initials>
            <remark><p>First draft</p></remark>
        </revision>
    </header>
    <section1 topic='Introduction' anchor='intro'>
        <p>The original Bookmarks specification (&xep0048;) used the widely available
            Private XML Storage (&xep0049;), but stored all bookmarks in a single element.
            When the specification was moved to the Standards Track and Draft, it was also
            updated to use the user's Pubsub service (&xep0223;), but kept this single element
            containing all bookmarks inside a single Pubsub item.</p>
        <p>Most implementations have kept to the original, Private XML Storage based solution, and
            while some newer implementations have used Pubsub, these are limited in capability by the use of
            a single item.</p>
        <p>This specification resolves both issues by providing a new Bookmarks specification to migrate to,
            and takes the opportunity to update the XML namespace in use as well. The URL storage is dropped,
            since it is rarely used. Storage of URL bookmarks is therefore out of scope.</p>
    </section1>

    <section1 topic="Outline of use">
        <p>Clients store each bookmarked chatroom as a Pubsub item within the '&namespace;' node. Each
            item SHALL have, as item id, the Room JID of the chatroom (eg, coven@chat.shakespeare.lit).</p>
        <p>The payload of the item SHALL be a conference element qualified by the '&namespace;' namespace, with the following syntax:</p>
        <table caption='Syntax of conference element'>
            <tr>
                <th>Element or Attribute</th>
                <th>Definition</th>
                <th>Datatype</th>
                <th>Inclusion</th>
            </tr>
            <tr>
                <td>'autojoin' attribute</td>
                <td>Whether the client should automatically join the conference room on login.</td>
                <td>boolean defaulting to false &BOOLEANNOTE;</td>
                <td>OPTIONAL</td>
            </tr>
            <tr>
                <td>'name' attribute</td>
                <td>A friendly name for the bookmark.</td>
                <td>string</td>
                <td>RECOMMENDED</td>
            </tr>
            <tr>
                <td>&lt;nick/&gt; element</td>
                <td>The user's preferred roomnick for the chatroom.</td>
                <td>string</td>
                <td>OPTIONAL</td>
            </tr>
            <tr>
                <td>&lt;password/&gt; element</td>
                <td>Unencrypted string for the password needed to enter a password-protected room. For security reasons, use of this element is NOT RECOMMENDED.</td>
                <td>string</td>
                <td>NOT RECOMMENDED</td>
            </tr>
        </table>
        <p>Note: The datatypes are as defined in &w3xmlschema2;.</p>
        <example caption='An example of the conference element'><![CDATA[
      <conference xmlns=']]>&namespace;<![CDATA['
                  name='Council of Oberon'
                  autojoin='true'>
        <nick>Puck</nick>
      </conference>
]]></example>
        <p>This bookmark would be displayed as 'Council of Oberon' and, if activated, would attempt to join the conference room 'council@conference.underhill.org' with nickname 'Puck'.</p>
        <p>Note that a bookmark item MUST contain only one conference room.</p>
        <p>Note also that a conference element has no truly mandatory attributes or child elements, though a name SHOULD be given. Thus the following is legal:</p>
        <example caption='Minimalist conference element'><![CDATA[
      <conference xmlns=']]>&namespace;<![CDATA['/>
]]></example>
    </section1>

    <section1 topic="Bookmark Notifications">
        <p>When a client is sent an event from the Pubsub service for the '&namespace;' node, it MUST check the 'autojoin' attribute if present, and join the room immediately if the attribute is both present and true.</p>
    </section1>

    <section1 topic="Implementation Notes">
        <section2 topic="Differences to XEP-0048">
            <ul>
                <li>The conference element does not contain the jid - this is present only in the item id.</li>
                <li>Each conference element is contained within an item.</li>
                <li>The storage MUST be &xep0223;</li>
            </ul>
        </section2>
        <section2 topic="Compatibility">
            <p>A server MAY choose to unify the bookmarks from both &xep0049; based and the current &xep0048;.</p>
            <section3 topic="Publishing via this specification">
            <p>When a client publishes a new item, the server MAY collate all items, casting them into the 'storage:bookmarks' namespace and setting the jid attribute to the item id in each case. When contained within a storage element qualified by the 'storage:bookmarks' namespace, this will be the correct format for both current and previous variants of &0048;</p>
            </section3>
            <section3 topic="Publishing via the old specification">
                <p>If a client publishes a replacement list of bookmarks via the older specifications, a server MAY examine the list and update the individual items as required, sending updates or retraction notifications as needed. Servers electing to perform this OPTIONAL behaviour SHOULD NOT send notifications for unchanged items.</p>
            </section3>
        </section2>
    </section1>

    <section1 topic='Determining Support' anchor='support'>
        <p>This specification relies fully on a number of others. Most particularly, support for this protocol is available if &xep0223; is supported.</p>
    </section1>

    <section1 topic="Acknowledgements">
        <p>The authors would like to note that much of the syntax description was copied exactly from &xep0048; by Rachel Blackman, Peter Millard, and Peter Saint-Andre. Much of the remainder of this specification is based closely on their work.</p>
    </section1>

    <section1 topic='Security Considerations' anchor='security'>
        <p>The password child element of conference is well known to provide only very weak levels of security; storing it in bookmarks lowers this security still further.</p>
    </section1>
</xep>
